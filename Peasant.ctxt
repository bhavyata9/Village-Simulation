#BlueJ class context
comment0.params=
comment0.target=Peasant()
comment1.params=side
comment1.target=Peasant(java.lang.String)
comment10.params=range
comment10.target=void\ checkSpace(int)
comment11.params=
comment11.target=void\ chopDown()
comment12.params=
comment12.target=void\ cleanArea()
comment13.params=
comment13.target=void\ resetClearList()
comment14.params=
comment14.target=void\ backToHQ()
comment15.params=type
comment15.target=void\ build(java.lang.String)
comment16.params=
comment16.target=void\ act()
comment2.params=
comment2.target=void\ moveToBuild()
comment2.text=\r\n\ Move\ towards\ determined\ building\ spot.\r\n
comment3.params=
comment3.target=void\ findSideHQ()
comment3.text=\r\n\ Search\ for\ the\ friendly\ Headquarters\ (same\ id\ as\ this\ Peasant)\r\n\ Use\ co-ordinates\ of\ HQ\ as\ the\ center\ point\ and\ build\ around\ with\ it\r\n
comment4.params=
comment4.target=void\ findResources()
comment4.text=\r\n\ Finds\ the\ nearest\ Resource,\ and\ sets\ it\ as\ the\ target\ Resource.\r\n\ Identifies\ Resource\ type\ and\ increases\ inventory\ accordingly\ when\ it\ is\ reached.\r\n
comment5.params=
comment5.target=void\ findTree()
comment6.params=
comment6.target=void\ updateInv()
comment6.text=\r\n\ Updates\ inventory\ values\ inside\ HQ.\r\n\ Used\ when\ collecting\ Resources.\r\n
comment7.params=
comment7.target=void\ findPlaceToBuild()
comment7.text=\r\n\ Randomly\ find\ a\ location\ within\ a\ fixed\ "radius"\ of\ the\ Headquarters.\r\n\ This\ is\ because\ it\ must\ account\ for\ the\ actual\ size\ of\ the\ image,\ rather\ than\ what\ it\ visually\ appears\ to\ be.\r\n
comment8.params=type
comment8.target=void\ setBuildID(java.lang.String)
comment9.params=max
comment9.target=int\ randomNum(int)
numComments=17
